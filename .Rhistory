pkgload::load_all(here::here())
pkgload::load_all(here::here())
pkgload::load_all(here::here())
install.packages("quarto")
library(htmltools)
library(fs)
pkgload::load_all(here::here())
install.packages("quarto")
remove.packages("quarto")
install.packages("quarto")
install.packages("yaml")
install.packages("quarto")
library(dplyr)
library(tidyr)
library(purrr)
# SOLUTION HERE
attributes(head(storms))
# SOLUTION HERE
storms1 <- storms
attr(storms1, "class[1]") <- list
# SOLUTION HERE
attributes(head(storms1))
storms1|>
group_by(year)|>
summarise(count = n())
# SOLUTION HERE
rm(storms)
storms|>
group_by(year)|>
summarise(count = n())
library(dplyr)
library(tidyr)
library(purrr)
# SOLUTION HERE
attributes(head(storms))
# SOLUTION HERE
attr(storms, "class") <- "list"
# SOLUTION HERE
rm(storms)
#This works because we undid the work from step 2 now focusing on the orginal data frame of storms that was a tibble, data frame.
class(storms)
typeof(storms)
# SOLUTION HERE
head(storms)
print(storms)
print.data.frame(storms)
#The first line of code gives a shorted output of data only with the first 6 rows but all of the columns. The second line of code gives an expanded output of data with the ability to view the first 1000 rows as well as all the columns. The third line of code gives the number of rows but then reaches a max print where 19,461 rows are ommitted and the rows avaiable have NA's. All 3 give different levels of information.
# SOLUTION HERE
as.numeric(head(storms$name))
as.numeric(factor(head(storms$name)))
#The first line of code gives many NA's where as the second line of code gives 1s instead of NA's most likely representing the number of NA's accounted for. The first line of code can't categorize names as numbers therefore NA's pop up. Where as line 2 of code is changing these names into categorical values meaning that 1 represents the same name because the names are now integers.
stormsNamed <- storms %>%
nest(.by = name)
stormsNamed
stormData <- stormsNamed |>
pull(data)
length(stormData)
map_int(stormData, length)
stormsNamed |>
unnest(data)
# SOLUTION HERE
glimpse(starwars)
starwars |>
unnest(films)
starwars |>
unnest(vehicles)
starwars |>
unnest(starships)
starwars |>
nest(films, vehicles, starships, .by = name)
# SOLUTION HERE
head(storms)
print(head(storms))
print.data.frame(head(storms))
vect1 <- c("y", 14, T, 19)
vect1
list1 <- list("y", 14, T, 19)
names(list1) <- c("a", "b", "c", "d")
list1["a"]
list1$a
list1[["a"]]
mtcars |> head(10)
